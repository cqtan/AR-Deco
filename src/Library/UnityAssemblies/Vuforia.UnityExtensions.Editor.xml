<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Vuforia.UnityExtensions.Editor</name>
  </assembly>
  <members>
    <member name="M:Vuforia.EditorClasses.PlayerSettingsValidator.ValidatePlayerSettings(System.Boolean)">
      <summary>
            Validate Player Settings for the platform(s) supported by Vuforia (currently active or all platforms)
            Validation should be done when Vuforia is enabled in the Player Settings.
            </summary>
      <param name="validateAllTargets">if true will do the validation for all the supported platforms</param>
      <returns>result of the validation containing build message and validity flag</returns>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedCylinderTarget">
      <summary>
            This class provides utility properties to a serialized object
            targeting a CylinderTargetBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedCylinderTarget.GetBehaviours">
      <summary>
            Get all behaviours that are edited by the serialized object
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedDataSetTrackable.ExtendedTracking">
      <summary>
            Defines whether extended tracking should be enabled for this target
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedDataSetTrackable.ReconstructionToInitialize">
      <summary>
            Defines whether this target should initilize smart terrain (and which) when detected.
            Set null to not initialize any smart terrain.
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedDataSetTrackable.SmartTerrainOccluderBoundsMin">
      <summary>
            the minimum bounds of the occluder box for ST initialization
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedDataSetTrackable.SmartTerrainOccluderBoundsMax">
      <summary>
            the maximum bounds of the occluder box for ST initialization
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedDataSetTrackable.GetDataSetName">
      <summary>
            The name of the data set the Trackable belongs to.
            Please be aware that the data set name is not a unique identifier at runtime!
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedImageTarget">
      <summary>
            This class provides utility properties to a serialized object
            targeting an ImageTargetBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedImageTarget.GetBehaviours">
      <summary>
            Get all behaviours that are edited by the serialized object
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedMultiTarget">
      <summary>
            This class provides utility properties to a serialized object
            targeting a MultiTargetBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedMultiTarget.GetBehaviours">
      <summary>
            Get all behaviours that are edited by the serialized object
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedObjectExtension">
      <summary>
            Extension methods for SerializedObject.
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedObjectExtension.EditHandle">
      <summary>
            Utility class for editing a SerializedObject.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedObjectExtension.EditHandle.Dispose">
      <summary>
            Applies all modified data of the serialized object
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedObjectExtension.Edit(UnityEditor.SerializedObject)">
      <summary>
            Utility function for editing a SerializedObject. Any code which modifies the SerializedObject should
            be enclosed with a using-statement of this method. Calling Edit() updates the SerializedObject.
            </summary>
      <returns>EditHandle applies all modified data when it is disposed</returns>
            Example:
            using(SerializedObject.Edit())
            {
            ... editor code
            }
        </member>
    <member name="M:Vuforia.EditorClasses.SerializedObjectExtension.FixApproximatelyEqualFloatValues(UnityEditor.SerializedProperty)">
      <summary>
            Check whether all values of the serialized property are approximately equal.
            If so, change the property to have a unique value for all targets.
            </summary>
      <param name="property">The property needs to have a floatValue</param>
      <returns>true if the serialized property now contains one value.</returns>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedObjectExtension.GetArrayItems(UnityEditor.SerializedProperty,System.String[]@)">
      <summary>
            Get all values of serialized array
            </summary>
      <param name="property">Property has to point to a string array</param>
      <param name="result">copy of the serialized array. note that changing this array does not affect the serializedproperty</param>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedObjectExtension.RemoveArrayItem(UnityEditor.SerializedProperty,System.String)">
      <summary>
            Remove first occurence of string-value in the serialized array
            </summary>
      <param name="property">Property has to point to a string array</param>
      <param name="item">this value is removed from the array</param>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedObjectExtension.AddArrayItem(UnityEditor.SerializedProperty,System.String)">
      <summary>
            Add a string-value to a serialized array or list
            </summary>
      <param name="property">Property has to point to a string array</param>
      <param name="item">this value is added to the array</param>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedObjectTarget">
      <summary>
            This class provides utility properties to a serialized object
            targeting an ObjectTargetBehaviour
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedObjectTarget.AspectRatioXY">
      <summary>
            Aspect ratio length/width
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedObjectTarget.AspectRatioXZ">
      <summary>
            Aspect ratio length/height
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedObjectTarget.ShowBoundingBox">
      <summary>
            Whether the visualization of the bounding box/alignment guide is enabled in the editor
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedObjectTarget.PreviewImage">
      <summary>
            Set or get the preview image in the inspector
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedObjectTarget.GetBehaviours">
      <summary>
            Get all behaviours that are edited by the serialized object
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedProp">
      <summary>
            This class provides utility properties to a serialized object
            targeting a PropBehaviour
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedProp.BoxColliderToUpdate">
      <summary>
            Allows to set which box collider should be automatically updated with new bounding box revisions
            If set to null, nothing will be updated
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedSmartTerrainTrackable">
      <summary>
            This class provides utility properties to a serialized object
            targeting a SmartTerrainTrackableBehaviour
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedSmartTerrainTrackable.MeshFilterToUpdate">
      <summary>
            Allows to set which mesh filter should be automatically updated with new mesh revisions
            If set to null, nothing will be updated
            </summary>
    </member>
    <member name="P:Vuforia.EditorClasses.SerializedSmartTerrainTrackable.MeshColliderToUpdate">
      <summary>
            Allows to set which mesh collider should be automatically updated with new mesh revisions
            If set to null, nothing will be updated
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedTrackable">
      <summary>
            This class wraps a SerializedObject of a TrackableBehaviour and provides utility-methods.
            </summary>
            This class should be used when a trackable behaviour is modified in the editor
            and the changes should be made persistent. By using the SerializedProperties for editing
            Unity will automatically handle editor functionality, e.g. Undo/Redo
            It is possible that the serialized object is editing multiple objects simultaneously.
        </member>
    <member name="P:Vuforia.EditorClasses.SerializedTrackable.SerializedObject">
      <summary>
            Get the internal SerializedObject-instance
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedTrackable.Edit">
      <summary>
            Any code which modifies the SerializedObject should be enclosed
            with a using-statement of this method. Calling Edit() updates the
            SerializedObject.
            </summary>
      <returns>EditHandle applies all modified data when it is disposed</returns>
            Example:
            using(SerializedTrackable.Edit())
            {
            ... editor code
            }
        </member>
    <member name="M:Vuforia.EditorClasses.SerializedTrackable.GetGameObjects">
      <summary>
            Get all game objects of behaviours that are targeted by the serialized object
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedVuMark">
      <summary>
            This class provides utility properties to a serialized object
            targeting a VuMarkBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedVuMark.GetBehaviours">
      <summary>
            Get all behaviours that are edited by the serialized object
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SerializedWord">
      <summary>
            This class provides utility properties to a serialized object
            targeting a WordBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SerializedWord.GetBehaviours">
      <summary>
            Get all behaviours that are edited by the serialized object
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.ObjectTargetEditor">
      <summary>
            Editor class for ObjectTargetBehaviours
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.ObjectTargetEditor.EditorConfigureTarget(Vuforia.ObjectTargetBehaviour,Vuforia.EditorClasses.SerializedObjectTarget)">
      <summary>
            Configure the Object Target in this custom editor.
            </summary>
      <param name="otb">name of the object for the configuration</param>
    </member>
    <member name="M:Vuforia.EditorClasses.ObjectTargetEditor.OnEnable">
      <summary>
            Initializes the Object Target when it is drag-dropped into the scene.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.ObjectTargetEditor.OnInspectorGUI">
      <summary>
            Lets the user choose a Object Target from a drop down list. Object Target
            must be defined in the "config.xml" file.
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.SurfaceEditor">
      <summary>
            Editor for Surfaces
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SurfaceEditor.EditorConfigureTarget(Vuforia.SurfaceBehaviour,Vuforia.EditorClasses.SerializedSmartTerrainTrackable)">
      <summary>
            Configure the Smart Terrain Surface in this custom editor.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SurfaceEditor.OnEnable">
      <summary>
            Initializes the Smart Terrain Surface when it is drag-dropped into the scene.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.SurfaceEditor.OnInspectorGUI">
      <summary>
            Draws the inspector for the surface
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.CloudRecoEditor">
      <summary>
            Editor for the CloudRecoBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.CloudRecoEditor.OnInspectorGUI">
      <summary>
            Draws a custom UI for the cloud reco behaviour inspector
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.CloudRecoEditor.OnSceneGUI">
      <summary>
            Renders a label to visualize the CloudRecoBehaviour
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.CylinderTargetEditor">
      <summary>
            Editor for the CylinderTargetBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.CylinderTargetEditor.EditorConfigureTarget(Vuforia.CylinderTargetBehaviour,Vuforia.EditorClasses.SerializedCylinderTarget)">
      <summary>
            Configure the Cylinder Target in this custom editor.
            </summary>
            This method configures the cylinder target behaviour when it is first opened in the editor
            It assigns the default dataset and creates game objects for visualizing the cylinder.
            The result is equal to the CylinderTarget-prefab, even when the script is manually added to a 
            gameobject.
        </member>
    <member name="M:Vuforia.EditorClasses.CylinderTargetEditor.OnEnable">
      <summary>
            Initializes the Cylinder Target when it is drag-dropped into the scene.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.CylinderTargetEditor.OnInspectorGUI">
      <summary>
            Lets the user choose a Cylinder Target from a drop down list. Cylinder Target
            must be defined in the "config.xml" file.
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.DataSetToTrackableMenu">
      <summary>
            Custom Unity Menu to Apply Dataset properties from the XML file to scene objects
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.DataSetToTrackableMenu.ApplyDataSetProperties">
      <summary>
            Custom Unity menu option to Apply Dataset properties from the XML file to scene objects
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.ImageTargetEditor">
      <summary>
            Editor for ImageTargetBehaviours
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.ImageTargetEditor.EditorConfigureTarget(Vuforia.ImageTargetBehaviour,Vuforia.EditorClasses.SerializedImageTarget)">
      <summary>
            Configure the Image Target in this custom editor.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.ImageTargetEditor.OnEnable">
      <summary>
            Initializes the Image Target when it is drag-dropped into the scene.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.ImageTargetEditor.OnInspectorGUI">
      <summary>
            Lets the user choose a Image Target from a drop down list. Image Target
            must be defined in the "config.xml" file.
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.MultiTargetEditor">
      <summary>
            Editor for MultiTargetBehaviours
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.MultiTargetEditor.EditorConfigureTarget(Vuforia.MultiTargetBehaviour,Vuforia.EditorClasses.SerializedMultiTarget)">
      <summary>
            Configure the Multi Target in this custom editor.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.MultiTargetEditor.OnEnable">
      <summary>
            Initializes the Multi Target when it is drag-dropped into the scene.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.MultiTargetEditor.OnSceneGUI">
      <summary>
            Checks if the transformation of the Multi Target has been changed by
            Unity transform-handles in scene view.
            This is also called when user changes attributes in Inspector.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.MultiTargetEditor.OnInspectorGUI">
      <summary>
            Lets the user choose a Multi Target from a drop down list. Multi Target
            must be defined in the "config.xml" file.
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.VuforiaConfigurationEditor">
      <summary>
            Custom editor for the Vuforia Configuration asset
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.VuforiaBehaviourEditor">
      <summary>
            Editor of the VuforiaBehaviour
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.VuforiaHelpMenu">
      <summary>
            Displays various help menu options in the Unity menu
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.VuforiaHelpMenu.BrowseVuforiaHelp">
      <summary>
            Method opens up a browser Window with the specified URL.
            This method is called when "Vuforia Documentation" is chosen from the
            Unity "Help" menu.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.VuforiaHelpMenu.BrowseVuforiaReleaseNotes">
      <summary>
            Method opens up a browser Window with the specified URL.
            This method is called when "Release Notes" is chosen from the
            Unity "Help" menu.
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.ReconstructionEditor">
      <summary>
            Editor for the ReconstructionBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.ReconstructionEditor.EditorConfigureTarget(Vuforia.ReconstructionBehaviour,UnityEditor.SerializedObject)">
      <summary>
            Configure the Smart Terrain in this custom editor.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.ReconstructionEditor.OnEnable">
      <summary>
            Initializes the Smart Terrain when it is drag-dropped into the scene.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.ReconstructionEditor.OnSceneGUI">
      <summary>
            This method checks for the scale of the SmartTerrainObject and resets it if it's not 1,1,1
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.ReconstructionEditor.OnInspectorGUI">
      <summary>
            Draws the inspector for the smart terrain prefab
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.PropEditor">
      <summary>
            Editor for Props
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.PropEditor.EditorConfigureTarget(Vuforia.PropBehaviour,Vuforia.EditorClasses.SerializedProp)">
      <summary>
            Configure the Smart Terrain Prop in this custom editor.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.PropEditor.OnEnable">
      <summary>
            Initializes the Smart Terrain Prop when it is drag-dropped into the scene.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.PropEditor.OnInspectorGUI">
      <summary>
            Draws the inspector for the prop
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.TextRecoEditor">
      <summary>
            Editor for the TextRecoBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.TextRecoEditor.EditorConfigureTarget(Vuforia.TextRecoBehaviour)">
      <summary>
            Configure the TextReco in this custom editor.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.TextRecoEditor.OnEnable">
      <summary>
            Executed new TextRecoBehaviour is instantiated in the scene
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.TextRecoEditor.OnInspectorGUI">
      <summary>
            Draws a custom UI for the text reco behaviour inspector
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.TextRecoEditor.OnSceneGUI">
      <summary>
            Renders a label to visualize the TextRecoBehaviour
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.UnityPlayModeEditorUtility">
      <summary>
            This class implements to IPlayModeEditorUtility to provide various editor functionality (popups, reading xml files)
            at play mode runtime without introducing a depenency on UnityEdtitor from runtime classes.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.UnityPlayModeEditorUtility.DisplayDialog(System.String,System.String,System.String)">
      <summary>
            Displays a popup dialog in the Unity editor
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.UnityPlayModeEditorUtility.LoadAndParseWebcamProfiles">
      <summary>
            Loads web cam profiles from an XML file at a given path and returns all of them
            including the default profile
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.UnityPlayModeEditorUtility.RestartPlayMode">
      <summary>
            Forces a restart of Play Mode in the Editor.
            It is called when Unity re-compiles the scripts shortly after starting play mode.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.UnityPlayModeEditorUtility.ShowErrorInMouseOverWindow(System.String)">
      <summary>
            Displays a large error message in the window that the mouse is currently over
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.UnityPlayModeEditorUtility.IsVuforiaEnabledInPlayerSettings">
      <summary>
            This is play mode, check editor player settings directly.
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.UserDefinedTargetBuilderEditor">
      <summary>
            Editor for the UserDefinedTargetBuildingBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.UserDefinedTargetBuilderEditor.OnInspectorGUI">
      <summary>
            Draws a custom UI for the UserDefinedTargetBehaviour inspector
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.UserDefinedTargetBuilderEditor.OnSceneGUI">
      <summary>
            Renders a label to visualize the UserDefinedTargetBehaviour
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.VirtualButtonEditor">
      <summary>
            Editor for the VirtualButtonBehaviour
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.VirtualButtonEditor.EditorConfigureTarget(Vuforia.VirtualButtonBehaviour)">
      <summary>
            Configure the Virtual Button in this custom editor.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.VirtualButtonEditor.OnEnable">
      <summary>
            Initializes the Virtual Button when it is drag-dropped into the scene.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.VirtualButtonEditor.OnInspectorGUI">
      <summary>
            Lets the user set sensitivity and name of a Virtual Button.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.VirtualButtonEditor.OnSceneGUI">
      <summary>
            Locks the y-scale of a Virtual Button at 1.
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.VuMarkEditor">
      <summary>
            Editor for ImageTargetBehaviours
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.VuMarkEditor.EditorConfigureTarget(Vuforia.VuMarkBehaviour,Vuforia.EditorClasses.SerializedVuMark)">
      <summary>
            Configure the Image Target in this custom editor.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.VuMarkEditor.OnEnable">
      <summary>
            Initializes the VuMark Target when vmb is drag-dropped into the scene.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.VuMarkEditor.OnInspectorGUI">
      <summary>
            Lets the user choose a VuMark-Template from a drop down list. 
            </summary>
    </member>
    <member name="T:Vuforia.EditorClasses.WordEditor">
      <summary>
            Editor for WordBehaviours
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.WordEditor.EditorConfigureTarget(Vuforia.WordBehaviour,Vuforia.EditorClasses.SerializedWord)">
      <summary>
            Configure the Word in this custom editor.
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.WordEditor.OnEnable">
      <summary>
            Initializes the Word when it is drag-dropped into the scene
            </summary>
    </member>
    <member name="M:Vuforia.EditorClasses.WordEditor.OnInspectorGUI">
      <summary>
            Draws the inspector for Word prefab
            </summary>
    </member>
    <member name="T:PlatformChangeObserver">
      <summary>
            This class is Instantiated by Unity and the OnActiveBuildTargetChanged
            method is called when the buildtarget has changed
            </summary>
    </member>
  </members>
</doc>